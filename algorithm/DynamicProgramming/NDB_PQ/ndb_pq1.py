# 실전문제 1. 1로 만들기 (교재 코드)
def solution():
  # 정수 X 입력받기
  x = int(input())

  # 1 ~ x까지 각각의 최단거리를 기록하기 위해서
  # 인덱스 0부터 최대 가능 x의 크기 + 1까지 리스트 생성
  # 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
  d = [0] * 30001

  # d[1]은 1의 최소 연산 횟수이므로, 0
  # d[2]는 2의 최소 연산 횟수이므로, 1 
  # -> 2부터 채워나가면 됨
  
  # 다이나믹 프로그래밍 진행 (보텀업)
  for i in range(2, x+1):
    # 현재 값에서 -1을 했을 때가 최소 연산 횟수라고 가정
    # 현재 수에서 1을 빼는 경우
    d[i] = d[i - 1] + 1

    """
    2, 3, 5로 나누어 떨어질 때, 각각 나누어 준다.
    min을 하는 이유는,
    그 수로 나누어 떨어질 때 가능한 계산의 수가
    1을 빼주거나 그 수로 나누어 주는 것뿐이기 때문

    min 할 때 dp[i]에 + 1을 안 하는 이유는,
    앞서 dp[i] = dp[i - 1] + 1로 정의했기 때문
    """
    
    # 현재 수가 2로 나누어 떨어지는 경우
    if i % 2 == 0:
      d[i] = min(d[i], d[i // 2] + 1)  #min(): 두 수 중에서 단순히 더 작은 수 구함
    # 현재 수가 3으로 나누어 떨어지는 경우
    if i % 3 == 0:
      d[i] = min(d[i], d[i // 3] + 1)
    # 현재 수가 5로 나누어 떨어지는 경우
    if i % 5 == 0:
      d[i] = min(d[i], d[i // 5] + 1)
  
  print(d[x])